// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class ASPVideoPlayerView;
@class NSCoder;

/// Base class for the video controls.
SWIFT_CLASS("_TtC14ASPVideoPlayer16ASPBasicControls")
@interface ASPBasicControls : UIView
@property (nonatomic, weak) IBOutlet ASPVideoPlayerView * _Nullable videoPlayer;
@property (nonatomic, copy) void (^ _Nullable didPressNextButton)(void);
@property (nonatomic, copy) void (^ _Nullable didPressPreviousButton)(void);
@property (nonatomic, copy) void (^ _Nullable interacting)(BOOL);
@property (nonatomic, copy) void (^ _Nullable newVideo)(void);
@property (nonatomic, copy) void (^ _Nullable finishedVideo)(void);
@property (nonatomic) BOOL nextButtonHidden;
@property (nonatomic) BOOL previousButtonHidden;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;

/// A video player implementation with basic functionality.
SWIFT_CLASS("_TtC14ASPVideoPlayer14ASPVideoPlayer")
@interface ASPVideoPlayer : UIView
/// Sets the controls to use for the player. By default the controls are ASPVideoPlayerControls.
@property (nonatomic, strong) ASPBasicControls * _Null_unspecified videoPlayerControls;
/// The duration of the fade animation.
@property (nonatomic) double fadeDuration;
/// An array of URLs that the player will load. Can be local or remote URLs.
@property (nonatomic, copy) NSArray<NSURL *> * _Nonnull videoURLs;
/// Sets wether the playlist should loop. Once the last video has finished playing, the first one will start.
@property (nonatomic) BOOL shouldLoop;
/// Sets the color of the controls.
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;
@class UITouch;

@interface ASPVideoPlayer (SWIFT_EXTENSION(ASPVideoPlayer)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC14ASPVideoPlayer22ASPVideoPlayerControls")
@interface ASPVideoPlayerControls : ASPBasicControls
/// Reference to the video player. Can be set through the Interface Builder.
@property (nonatomic, weak) IBOutlet ASPVideoPlayerView * _Nullable videoPlayer;
/// Sets the visibility of the next button.
@property (nonatomic) BOOL nextButtonHidden;
/// Sets the visibility of the previous button.
@property (nonatomic) BOOL previousButtonHidden;
/// Sets the color of the controls.
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSError;

/// A simple UIView subclass that can play a video and allows animations to be applied during playback.
SWIFT_CLASS("_TtC14ASPVideoPlayer18ASPVideoPlayerView")
@interface ASPVideoPlayerView : UIView
/// A closure that will be called when a new video is loaded.
@property (nonatomic, copy) void (^ _Nullable newVideo)(void);
/// A closure that will be called when the video is ready to play.
@property (nonatomic, copy) void (^ _Nullable readyToPlayVideo)(void);
/// A closure that will be called when a video is started.
@property (nonatomic, copy) void (^ _Nullable startedVideo)(void);
/// A closure that will be called repeatedly while the video is playing.
@property (nonatomic, copy) void (^ _Nullable playingVideo)(double);
/// A closure that will be called when a video is paused.
@property (nonatomic, copy) void (^ _Nullable pausedVideo)(void);
/// A closure that will be called when the end of the video has been reached.
@property (nonatomic, copy) void (^ _Nullable finishedVideo)(void);
/// A closure that will be called when a video is stopped.
@property (nonatomic, copy) void (^ _Nullable stoppedVideo)(void);
/// A closure that will be called when a seek is triggered.
@property (nonatomic, copy) void (^ _Nullable seekStarted)(void);
/// A closure that will be called when a seek has ended.
@property (nonatomic, copy) void (^ _Nullable seekEnded)(void);
/// A closure that will be called when an error occured.
@property (nonatomic, copy) void (^ _Nullable error)(NSError * _Nonnull);
/// Sets wether the video should loop.
@property (nonatomic) BOOL shouldLoop;
/// Sets wether the video should start automatically after it has been successfuly loaded.
@property (nonatomic) BOOL startPlayingWhenReady;
/// The url of the video that should be loaded.
@property (nonatomic, copy) NSURL * _Nullable videoURL;
/// The volume of the player. Should be a value in the range [0.0, 1.0].
@property (nonatomic) float volume;
/// The current playback time in seconds.
@property (nonatomic, readonly) double currentTime;
/// The length of the video in seconds.
@property (nonatomic, readonly) double videoLength;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) CGRect frame;
- (void)layoutSubviews;
/// Starts the video player from the beginning.
- (void)playVideo;
/// Pauses the video.
- (void)pauseVideo;
/// Stops the video.
- (void)stopVideo;
/// Seek to specific position in video. Should be a value in the range [0.0, 1.0].
- (void)seek:(double)percentage;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


SWIFT_CLASS("_TtC14ASPVideoPlayer6Loader")
@interface Loader : UIView
@property (nonatomic) CGFloat lineWidth;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)startAnimating;
- (void)stopAnimating;
@end


SWIFT_CLASS("_TtC14ASPVideoPlayer10NextButton")
@interface NextButton : UIButton
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC14ASPVideoPlayer15PlayPauseButton")
@interface PlayPauseButton : UIButton
@property (nonatomic, getter=isSelected) BOOL selected;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC14ASPVideoPlayer14PreviousButton")
@interface PreviousButton : UIButton
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

SWIFT_CLASS("_TtC14ASPVideoPlayer8Scrubber")
@interface Scrubber : UIControl
@property (nonatomic) CGFloat minimumValue;
@property (nonatomic) CGFloat maximumValue;
@property (nonatomic) CGFloat value;
@property (nonatomic) CGFloat trackHeight;
@property (nonatomic) CGColorRef _Nonnull trackColor;
@property (nonatomic) CGColorRef _Nonnull trackFillColor;
@property (nonatomic) CGColorRef _Nonnull thumbColor;
@property (nonatomic) CGFloat thumbWidth;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) CGRect frame;
- (void)layoutSubviews;
- (BOOL)beginTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)continueTrackingWithTouch:(UITouch * _Nonnull)touch withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (void)endTrackingWithTouch:(UITouch * _Nullable)touch withEvent:(UIEvent * _Nullable)event;
- (void)cancelTrackingWithEvent:(UIEvent * _Nullable)event;
@end

#pragma clang diagnostic pop
